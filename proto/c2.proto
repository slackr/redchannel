syntax = "proto3";

package c2;

import "implant.proto";

enum C2Command {
  C2_COMMAND_UNKNOWN = 0;
  C2_COMMAND_KEYX = 1;
  C2_COMMAND_GET_AGENTS = 2;
  C2_COMMAND_SET_CONFIG = 3;
}

enum CommandStatus {
  COMMAND_STATUS_UNKNOWN = 0;
  COMMAND_STATUS_SUCCESS = 1;
  COMMAND_STATUS_ERROR = 2;
}

enum C2Module {
  C2_MODULE_UNKNOWN = 0;
  C2_MODULE_C2 = 1;
  C2_MODULE_PROXY = 2;
  C2_MODULE_IMPLANT = 3;
  C2_MODULE_SKIMMER = 4;
  C2_MODULE_STATIC_DNS = 5;
}

enum AgentChannel {
  AGENT_CHANNEL_UNKNOWN = 0;
  AGENT_CHANNEL_DNS = 1;
  AGENT_CHANNEL_PROXY = 2;
}

enum ServerEvent {
  SERVER_EVENT_UNKNOWN = 0;
  SERVER_EVENT_CONNECTION = 1;
  SERVER_EVENT_DISCONNECT = 2;
  SERVER_EVENT_AUTH = 3;
  SERVER_EVENT_MESSAGE = 4;
  SERVER_EVENT_ERROR = 5;
}

message Agent {
  string agent_id = 1;
  bool has_keyx = 2;
  uint32 lastseen = 3;
  repeated string ip = 4;
  uint32 sendq_size = 5;
  uint32 recvq_size = 6;
  implant.SysInfoData sysinfo = 7;
}

message GetAgentsRequest {}

message GetAgentsResponse {
  repeated Agent agents = 1;
  CommandStatus status = 2;
  string message = 3;
}

message KeyxRequest {
  string agent_id = 1;
  bool all_agents = 2;
}
message KeyxResponse {
  CommandStatus status = 1;
  string message = 2;
}

message BuildImplantRequest {
  string os = 1;
  string arch = 2;
  bool debug = 3;
}
message BuildImplantResponse {
  CommandStatus status = 1;
  string output_file = 2;
  string message = 3;
}

message GetBuildLogRequest {}
message GetBuildLogResponse {
  CommandStatus status = 1;
  string log = 2;
  string message = 3;
}

message AgentCommandRequest {
  string agent_id = 1;
  implant.AgentCommand command = 2;
  string parameters = 3;
}
message AgentCommandResponse {
  CommandStatus status = 1;
  string message = 2;
}

service RedChannel {
  rpc GetAgents(GetAgentsRequest) returns (GetAgentsResponse);
  rpc Keyx(KeyxRequest) returns (KeyxResponse);
  rpc BuildImplant(BuildImplantRequest) returns (BuildImplantResponse);
  rpc GetBuildLog(GetBuildLogRequest) returns (GetBuildLogResponse);
  rpc AgentCommand(AgentCommandRequest) returns (AgentCommandResponse);
}